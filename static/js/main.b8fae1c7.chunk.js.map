{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","inputField","encrypted","encryptedText","decryptedText","handleText","arr","target","value","toLowerCase","split","map","letter","includes","join","decrypted","Object","keys","find","key","length","substring","setState","style","textAlign","display","justifyContent","padding","flexWrap","width","height","margin","type","onChange","this","placeholder","rows","paddingRight","name","checked","prev","disabled","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b8fae1c7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    a: \"a\",\n    b: \"b\",\n    c: \"c\",\n    d: \"d\",\n    e: \"e\",\n    f: \"f\",\n    g: \"g\",\n    h: \"h\",\n    i: \"i\",\n    j: \"j\",\n    k: \"k\",\n    l: \"l\",\n    m: \"m\",\n    n: \"n\",\n    o: \"o\",\n    p: \"p\",\n    q: \"q\",\n    r: \"r\",\n    s: \"s\",\n    t: \"t\",\n    u: \"u\",\n    v: \"v\",\n    w: \"w\",\n    x: \"x\",\n    y: \"y\",\n    z: \"z\",\n    a0: \"0\",\n    a1: \"1\",\n    a2: \"2\",\n    a3: \"3\",\n    a4: \"4\",\n    a5: \"5\",\n    a6: \"6\",\n    a7: \"7\",\n    a8: \"8\",\n    a9: \"9\",\n    inputField: \"\",\n    encrypted: true,\n    encryptedText: \"\",\n    decryptedText: \"\"\n  };\n\n  handleText = e => {\n    let arr = e.target.value.toLowerCase().split(\"\");\n    let numbers = \"0123456789\";\n\n    let encrypted = arr\n      .map(letter =>\n        numbers.includes(letter)\n          ? this.state[\"a\" + letter]\n          : letter === \" \"\n          ? \" \"\n          : this.state[letter]\n      )\n      .join(\"\");\n\n    let decrypted = arr\n      .map(letter => {\n        let x = Object.keys(this.state).find(key => this.state[key] === letter);\n\n        return letter === \" \" ? \" \" : x && x.length > 1 ? x.substring(1) : x;\n      })\n      .join(\"\");\n\n    this.setState({\n      inputField: e.target.value,\n      encryptedText: encrypted,\n      decryptedText: decrypted\n    });\n  };\n\n  render() {\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <h1>Text Encryption App</h1>\n        <h3>\n          *keys should have unique values or it will just be assigned to the\n          first key that appears in this list on decryption*\n        </h3>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            padding: \"40px\",\n            flexWrap: \"wrap\"\n          }}\n        >\n          <div>\n            <div>keys:</div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n                flexWrap: \"wrap\",\n                width: \"300px\",\n                height: \"fit-content\"\n              }}\n            >\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>A:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"name\"\n                  onChange={e => this.setState({ a: e.target.value })}\n                  value={this.state.a}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>B:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"letter\"\n                  onChange={e => this.setState({ b: e.target.value })}\n                  value={this.state.b}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>C:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"name\"\n                  onChange={e => this.setState({ c: e.target.value })}\n                  value={this.state.c}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>D:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"letter\"\n                  onChange={e => this.setState({ d: e.target.value })}\n                  value={this.state.d}\n                ></input>\n              </div>\n\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>E:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"name\"\n                  onChange={e => this.setState({ e: e.target.value })}\n                  value={this.state.e}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>F:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"letter\"\n                  onChange={e => this.setState({ f: e.target.value })}\n                  value={this.state.f}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>G:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"name\"\n                  onChange={e => this.setState({ g: e.target.value })}\n                  value={this.state.g}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>H:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"letter\"\n                  onChange={e => this.setState({ h: e.target.value })}\n                  value={this.state.h}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>I:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"name\"\n                  onChange={e => this.setState({ i: e.target.value })}\n                  value={this.state.i}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>J:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"letter\"\n                  onChange={e => this.setState({ j: e.target.value })}\n                  value={this.state.j}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>K:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"name\"\n                  onChange={e => this.setState({ k: e.target.value })}\n                  value={this.state.k}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>L:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"letter\"\n                  onChange={e => this.setState({ l: e.target.value })}\n                  value={this.state.l}\n                ></input>\n              </div>\n\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>M:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"name\"\n                  onChange={e => this.setState({ m: e.target.value })}\n                  value={this.state.m}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>N:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"letter\"\n                  onChange={e => this.setState({ n: e.target.value })}\n                  value={this.state.n}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>O:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"name\"\n                  onChange={e => this.setState({ o: e.target.value })}\n                  value={this.state.o}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>P:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"letter\"\n                  onChange={e => this.setState({ p: e.target.value })}\n                  value={this.state.p}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>Q:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"name\"\n                  onChange={e => this.setState({ q: e.target.value })}\n                  value={this.state.q}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>R:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"letter\"\n                  onChange={e => this.setState({ r: e.target.value })}\n                  value={this.state.r}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>S:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"name\"\n                  onChange={e => this.setState({ s: e.target.value })}\n                  value={this.state.s}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>T:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"letter\"\n                  onChange={e => this.setState({ t: e.target.value })}\n                  value={this.state.t}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>U:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"name\"\n                  onChange={e => this.setState({ u: e.target.value })}\n                  value={this.state.u}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>V:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"letter\"\n                  onChange={e => this.setState({ v: e.target.value })}\n                  value={this.state.v}\n                ></input>\n              </div>\n\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>W:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"name\"\n                  onChange={e => this.setState({ w: e.target.value })}\n                  value={this.state.w}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>X:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"letter\"\n                  onChange={e => this.setState({ x: e.target.value })}\n                  value={this.state.x}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>Y:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"name\"\n                  onChange={e => this.setState({ y: e.target.value })}\n                  value={this.state.y}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>Z:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"letter\"\n                  onChange={e => this.setState({ z: e.target.value })}\n                  value={this.state.z}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>0:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"name\"\n                  onChange={e => this.setState({ a0: e.target.value })}\n                  value={this.state.a0}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>1:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"letter\"\n                  onChange={e => this.setState({ a1: e.target.value })}\n                  value={this.state.a1}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>2:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"name\"\n                  onChange={e => this.setState({ a2: e.target.value })}\n                  value={this.state.a2}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>3:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"letter\"\n                  onChange={e => this.setState({ a3: e.target.value })}\n                  value={this.state.a3}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>4:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"name\"\n                  onChange={e => this.setState({ a4: e.target.value })}\n                  value={this.state.a4}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>5:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"letter\"\n                  onChange={e => this.setState({ a5: e.target.value })}\n                  value={this.state.a5}\n                ></input>\n              </div>\n\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>6:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"name\"\n                  onChange={e => this.setState({ a6: e.target.value })}\n                  value={this.state.a6}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>7:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"letter\"\n                  onChange={e => this.setState({ a7: e.target.value })}\n                  value={this.state.a7}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>8:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"name\"\n                  onChange={e => this.setState({ a8: e.target.value })}\n                  value={this.state.a8}\n                ></input>\n              </div>\n              <div\n                style={{\n                  margin: \"10px\",\n                  display: \"flex\",\n                  width: \"50px\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <label>9:</label>\n                <input\n                  style={{ width: \"20px\", textAlign: \"center\" }}\n                  type=\"letter\"\n                  onChange={e => this.setState({ a9: e.target.value })}\n                  value={this.state.a9}\n                ></input>\n              </div>\n            </div>\n          </div>\n          <div>\n            <div>input text:</div>\n            <textarea\n              type=\"text\"\n              onChange={this.handleText}\n              value={this.state.inputField}\n              placeholder=\"text to encrypt or encrypted text to decrypt\"\n              rows=\"25\"\n              style={{ width: \"300px\", padding: \"10px\" }}\n            ></textarea>\n          </div>\n          <div>\n            <div>\n              <span style={{ paddingRight: \"10px\" }}>output:</span>\n\n              <input\n                type=\"checkBox\"\n                name=\"outputType\"\n                checked={this.state.encrypted}\n                onChange={() =>\n                  this.setState(prev => (prev.encrypted = !prev.encrypted))\n                }\n              ></input>\n              <label style={{ paddingRight: \"15px\" }}>encrypt</label>\n              <input\n                type=\"checkBox\"\n                name=\"outputType\"\n                checked={!this.state.encrypted}\n                onChange={() =>\n                  this.setState(prev => (prev.encrypted = !prev.encrypted))\n                }\n              ></input>\n              <label>decrypt</label>\n            </div>\n            <textarea\n              type=\"text\"\n              disabled={true}\n              value={\n                this.state.encrypted\n                  ? this.state.encryptedText\n                  : this.state.decryptedText\n              }\n              placeholder=\"output\"\n              rows=\"25\"\n              style={{ width: \"300px\", padding: \"10px\" }}\n            ></textarea>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}